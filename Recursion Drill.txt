countPairs
public int countPairs(String str) {

	if (str.length()  <  3)
		return 0;

	if (str.charAt(0)  ==  str.charAt(2))
		return 1 + countPairs(str.substring(1));
	return countPairs(str.substring(1));
}
countAbc
public int countAbc(String str) {
	
	String x;
	
	if(str.length() < 3)
		return 0;
	x = str.substring(0, 3);
	
	if(x.equals("abc"))
		return 1 + countAbc(str.substring(3));
	
	if(x.equals("aba"))
		return 1 + countAbc(str.substring(2));
	return countAbc(str.substring(1));
}

count11
public int count11(String str) {
	
if(str.length() < 2)
		return 0;
		
	if(str.substring(0, 2).equals("11"))
		return 1 + count11(str.substring(2));
	return count11(str.substring(1));
}



stringClean
public String stringClean(String str) {

	if(str.length() < 2)
		return str;

	if(str.charAt(0) == str.charAt(1))
		return stringClean(str.substring(1));
	return str.charAt(0) + stringClean(str.substring(1));
}
countHi2
public int countHi2(String str) {

	if(str.length() < 2)
		return 0;
		
	if(str.length() == 2)
		return (str.equals(“hi”)) ? 1 : 0;
		
	if(str.charAt(0) == ‘x’)
	{
		if(str.substring(1, 3).equals(“hi”))
			return countHi2(str.substring(3));
		return countHi2(str.substring(1));
	}
	
	if(str.substring(0, 2).equals(“hi”))
		return 1 + countHi2(str.substring(2));
		
	if(str.substring(1, 3).equals(“hi”))
		return 1 + countHi2(str.substring(3));
	return countHi2(str.substring(2));
}





parenBit
public String parenBit(String str) {
  
	int x = str.length();
	
	if(str.charAt(0) != '(')
	{
		if(str.charAt(x - 1) != ')')
			return parenBit(str.substring(1, x -1));
		return parenBit(str.substring(1));
	}
	
	if(str.charAt(x - 1) != ')')
		return parenBit(str.substring(0, x - 1));
	return str;
}

nestParen
public boolean nestParen(String str) {

	int x = str.length();
	
	if(x == 0)
		return true;
	
	if(str.charAt(0) == '(' && str.charAt(x - 1) == ')')
			return nestParen(str.substring(1, x - 1));
	return false;
}

strCount
public int strCount(String str, String sub) {

	int x = sub.length();
	
	if(str.length() < x)
		return 0;
	
	if(str.substring(0, x).equals(sub))
		return 1 + strCount(str.substring(x), sub);
	return strCount(str.substring(1), sub);
}

strCopies
public boolean strCopies(String str, String sub, int n) {
	
	if(n == 0)
		return true;
	
	if(str.length() < sub.length())
		return false;
	
	if(str.substring(0, sub.length()).equals(sub))
		return strCopies(str.substring(1), sub, n - 1);
	return strCopies(str.substring(1), sub, n);
}
strDist
public int strDist(String str, String sub) {

	int x = str.length();
	int y = sub.length();
	
	if(x < y)
		return 0;
	
	if(str.substring(0, y).equals(sub))
	{
		if(str.substring(x - y, x).equals(sub))
			return x;
		return strDist(str.substring(0, x - 1), sub);
	}
	
	return strDist(str.substring(1), sub);
}
